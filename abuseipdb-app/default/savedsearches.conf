[[AbuseIPDB] KV-store periodical update]
action.email.useNSSubject = 1
action.webhook.enable_allowlist = 0
alert.track = 0
cron_schedule = 30 0,6,13,20 * * *
description = [AbuseIPDB] This report periodically updates the KV-store containing the most malicious IP addresses got from AbuseIPDB API.
dispatch.earliest_time = -15m
dispatch.latest_time = now
display.general.timeRangePicker.show = 0
display.general.type = statistics
display.page.search.tab = statistics
display.visualizations.show = 0
# Disabled by default.
enableSched = 0
request.ui_dispatch_app = abuseipdb-app
request.ui_dispatch_view = search
schedule_window = auto
search = | inputlookup AbuseIPDB_Scores\
\
``` Make the API call and append the results to the search ```\
| append [\
    | abuseipdb mode=blacklist prefix="" limit=10000000\
    | table ip, country, abuseScore, lastReportedAt\
    \
    ``` This is used to keep the API data into account, in case the IP location or the score changed ```\
    | eval api_last_report = round(strptime(lastReportedAt, "%Y-%m-%dT%H:%M:%S.%Q"))\
    | rename country as api_country, abuseScore as api_score\
]\
\
``` Aggregate the results ```\
| stats first(api_country) as api_country, first(api_score) as api_score, first(api_last_report) as api_last_report,\
        first(_key) as key, first(score) as lookup_score, first(country) as lookup_country, first(last_report) as lookup_last_report, first(record_updated_at) as record_updated_at by ip\
\
``` Get the data storred in the KV-store to compare with the API response ```\
| eval retrieved_from_api = if(isnotnull(api_score), 1, 0)\
| eval score = coalesce(api_score + 100, lookup_score), last_report = coalesce(lookup_last_report, api_last_report), record_updated_at = if(retrieved_from_api=1 OR isnull(record_updated_at), round(now()), record_updated_at), country = coalesce(api_country, lookup_country)\
\
``` Remove the old records that were not updated in the past 7 days ```\
| eval outdated_record_date = now() - 604800 ``` 604800 = 7 * 24 * 60 * 60 = number of seconds in 7 days ```\
| where record_updated_at > outdated_record_date\
\
``` Format the data for the output lookup ```\
| table key, ip, score, country, last_report, record_updated_at\
| rename key as _key\
\
``` Finally, output the results in the KV-store ```\
| outputlookup append=false AbuseIPDB_Scores